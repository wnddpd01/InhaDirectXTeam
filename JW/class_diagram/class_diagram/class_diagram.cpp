// class_diagram.cpp : 콘솔 응용 프로그램에 대한 진입점을 정의합니다.
//


/*

생존 탈출게임

지형 지물이용해서 탈출하는 게임 플레이어의 능력은 점프와 벽을 잠시 잡을 수 있는 정도

클래스 종류

1. player		플레이어
2. update		업데이트 
3. move			플레이어 움직임
4. object ( 장애물)

인스턴스는 추상화 개념 또는 클래스 객체, 컴퓨터 프로세스 등과 같은
템플릿이 실제 구현된 것이다.
인스턴스화는 클래스 내의 객체에 대해 특정한 변형을 정의하고,
이름을 붙인 다음, 그것을 물리적인 어떤 장소에 위치시키는 등의 작업을
통해, 인스턴스를 만드는 것을 의미한다.

몇몇 필자들은, 객체지향 프로그래밍에서 클래스를 인스턴스화 한다는 것이
, 클래스의 구체적인 인스턴스, 즉 객체를 만드는 것이라고 말한다.
그 객체는 컴퓨터 내에서 실행시킬 수 있는 실행 파일이다.
객체지향 프로그램 언어인 자바에서는, 클래스로부터 인스턴스화된 객체를,
객체라는 말 대신에 역시 클래스라고 부름으로써많은 사용자들을 혼란스럽게 한다.
즉 자바에서는, 특정한 클래스를 만들기 위해 클래스를 인스턴스화하며,
그것 역시 컴퓨터 내에서 동작하는 실행 파일이다.
객체지향 프로그래밍 개념이 나오기 이전의 데이터 모델링이나 프로그래밍에서는,
인스턴스화라는 것이 관계형 데이터베이스 테이블 내에 새로운 엔트리를 만듦으로써 추상화된
객체로부터 실재(데이터가 들어있는) 객체를 만드는 것도, 한 가지 용례였다.
 */
#include "stdafx.h"
#include <string>

class ClassName {
	public Object Attribute1;
	protected int Attribute2;
	private String Attribute3;

	public void Operation1() {
	}
	protected int Operation2() {
	}
	private Operation3( String str ) {
	}



int main()
{
    return 0;
}

